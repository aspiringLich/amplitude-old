/* Write your global styles here, in PostCSS syntax */
@font-face {
    font-family: "Noto Sans";
    src: url("$assets/fonts/NotoSans-Regular.ttf");
}

@font-face {
    font-family: "Fira Code";
    src: url("$assets/fonts/FiraCode-Regular.ttf");
}

@font-face {
    font-family: "Jet Brains Mono";
    src: url("$assets/fonts/JetBrainsMonoNL-Regular.ttf");
}

html, body { @apply h-full overflow-hidden; }

body {
    font-family: "Noto Sans";
    @apply bg-base;
}

p {
    @apply my-2 leading-7;
}

h1,
h2,
h3,
h4,
h5,
h6 {
    font-family: "Fira Code";
    line-height: 1.5;
    @apply my-2 font-bold;
}

code:not(.nglobal) {
    font-family: "Jet Brains Mono";
    line-height: 1.1em;
    font-size: 0.9em;
}

:not(pre) > code:not(.nglobal) {
    background-color: rgb(var(--color-surface-500) / 0.1);
    padding: 0.2em 0.4em;
    border-radius: 0.3em;
}

blockquote {
    margin: 0;

    box-sizing: border-box;
    width: 100%;
    overflow: hidden;
    @apply bg-surface-100 rounded-container-token m-0 py-4 px-6;
}

.splitpanes.default-theme {
    .splitpanes__pane {
        background-color: #f2f2f2;
    }
    .splitpanes__splitter {
        background-color: #fff;
        box-sizing: border-box;
        position: relative;
        flex-shrink: 0;
        &:before,
        &:after {
            content: "";
            position: absolute;
            top: 50%;
            left: 50%;
            background-color: rgba(0, 0, 0, 0.15);
            transition: background-color 0.3s;
        }
        &:hover:before,
        &:hover:after {
            background-color: rgba(0, 0, 0, 0.25);
        }
        &:first-child {
            cursor: auto;
        }
    }
}

.splitpanes.theme {
	.splitpanes__pane {
		@apply bg-base;
	}
	.splitpanes__splitter {
		@apply bg-surface-100;
		box-sizing: border-box;
		position: relative;
		flex-shrink: 0;
		&:before,
		&:after {
			content: '';
			position: absolute;
			top: 50%;
			left: 50%;
			background-color: rgba(0, 0, 0, 0.15);
			transition: background-color 0.3s;
		}
		&:hover:before,
		&:hover:after {
			background-color: rgba(0, 0, 0, 0.25);
		}
		&:first-child {
			cursor: auto;
		}
	}
}
.theme {
	&.splitpanes .splitpanes .splitpanes__splitter {
		z-index: 1;
	}
	&.splitpanes--vertical > .splitpanes__splitter,
	.splitpanes--vertical > .splitpanes__splitter {
		width: 7px;
		/* border-left: 1px solid #eee; */
		cursor: col-resize;
		&:before,
		&:after {
			transform: translateY(-50%);
			width: 1px;
			height: 30px;
		}
		&:before {
			margin-left: -2px;
		}
		&:after {
			margin-left: 1px;
		}
	}
	&.splitpanes--horizontal > .splitpanes__splitter,
	.splitpanes--horizontal > .splitpanes__splitter {
		height: 7px;
		/* border-top: 1px solid #eee; */
		cursor: row-resize;
		&:before,
		&:after {
			transform: translateX(-50%);
			width: 30px;
			height: 1px;
		}
		&:before {
			margin-top: -2px;
		}
		&:after {
			margin-top: 1px;
		}
	}
}